{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","defaultProps","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","disabled","length","onClick","newText","toUpperCase","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","About","App","Date","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24ae18f4.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                        </li>\n                    </ul>\n                    {/* <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n                    </div> */}\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'About'\n  };","import React, {useState} from 'react'\n\n\nconst TextForm = (props) => {\n    const handleUpClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText)\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n    }\n\n    const handleOnChange = (event)=>{\n        setText(event.target.value) \n    }\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text); \n    }\n\n\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n    }\n\n    const [text, setText] = useState(''); \n\n    return (\n        <>\n        <div className=\"container\"> \n            <h1 className='mb-4'>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-3\" >\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n\nexport default TextForm;","import React from 'react'\n\nexport default function About(props) {\n\n    return (\n        <div className=\"container\">\n\n            <div className=\"accordion\" id=\"accordionExample\">\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\"> </h2>\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" >\n                            Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                            <strong>Free to use </strong>\n                        </button>\n                    </h2>\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\">\n                            TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\n                        <button className=\"accordion-button collapsed\"\n                            type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                            <strong>Browser Compatible </strong>\n                        </button>\n                    </h2>\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\">\n                            This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n \nfunction App() {\n \n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtils\" key={new Date()} />\n    <div className=\"container my-3\">\n    <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm heading=\"Try TextUtils - word counter, character counter, remove extra spaces\"/>\n          </Route>\n    </Switch>\n    </div>\n    </Router>\n    </> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}